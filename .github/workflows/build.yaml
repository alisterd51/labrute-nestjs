name: Build

on:
  push:
    branches:
      - master
  pull_request:
  merge_group:

permissions:
  contents: read

env:
  NODE_VERSION: 21

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

  lint-eslint:
    needs: [setup]
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Clean install
        run: npm ci
      - name: Lint
        run: npm run test:lint

  lint-prettier:
    needs: [setup]
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Clean install
        run: npm ci
      - name: Format
        run: npm run test:format

  lint-dockerfile:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        with:
          dockerfile: Dockerfile

  test:
    needs: [setup]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16, 18, 20, 21]
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - name: Clean install
        run: npm ci
      - name: Test
        run: npm run test

  coverage:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Clean install
        run: npm ci
      - name: Coverage
        run: npm run test:cov

  test-e2e:
    needs: [setup]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16, 18, 20, 21]
    services:
      postgres:
        image: postgres:16@sha256:b09f2562ab14fcae750cfc5ae457cd97e90c37679f520bc4a84180913de90261
        env:
          POSTGRES_USER: ${{ vars.LABRUTE_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ vars.LABRUTE_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ vars.LABRUTE_POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - name: Clean install
        run: npm ci
      - name: Build
        run: npm run build
      - name: Test e2e
        run: npm run test:e2e
    env:
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${{ vars.LABRUTE_POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ vars.LABRUTE_POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ vars.LABRUTE_POSTGRES_DB }}
